# - config:
#     name: 通过批量id获取用户业务数据
#     request:
#         base_url: ${get_platform_tiger_api_host()}
#         headers:
#             Content-Type: $content_type
#         method: GET
#     variables:
#         - unexist_user_id: 100
#         - wrong_type_user_ids: aaa
#         - unsupport_fields_element: aaa
#         - wrong_type_fields_element: ''
#         - wrong_type_fields: '{}'

# - test:
#     name: 不传递user_ids-不传递fields
#     request:
#         url: /accounts/business
#     validate:
#         - eq: [status_code, 400]

# # 后端语言为kotlin时，user_ids和fields只支持逗号表达式（字段之间不包含空格）
# - test:
#     name: user_ids为逗号表达式只包含1个存在用户-fields不传递
#     request:
#         url: /accounts/business?user_ids=${source_user_id()}
#     validate:
#         - eq: [status_code, 200]
#         - eq: [content.0.id, ${source_user_id()}]
#         - length_equals: [content, 1]
#         - length_equals: [content.0, 15]
#         - contains: [content.0, age_section_id]
#         - contains: [content.0, gold]
#         - contains: [content.0, familiar_sprite]
#         - contains: [content.0, preview_work_id]
# - test:
#     name: user_ids为逗号表达式只包含一个存在用户-fields为空字符串
#     request:
#         url: /accounts/business?user_ids=${source_user_id()}&fields=
#     validate:
#         - eq: [status_code, 200]
#         - eq: [content.0.id, ${source_user_id()}]
#         - length_equals: [content, 1]
#         - length_equals: [content.0, 15]
#         - contains: [content.0, age_section_id]
#         - contains: [content.0, gold]
#         - contains: [content.0, familiar_sprite]
#         - contains: [content.0, preview_work_id]
# - test:
#     name: user_ids为逗号表达式只包含一个存在用户-fields为逗号表达式包含所有支持字段
#     request:
#         url: /accounts/business?user_ids=${source_user_id()}&fields=id,age_section_id,gold,create_time,mlz_name,age,doing,level,preview_work_id,publish_time,credit,introduce,masonry,familiar_sprite
#     validate:
#         - eq: [status_code, 200]
#         - eq: [content.0.id, ${source_user_id()}]
#         - length_equals: [content, 1]
#         - length_equals: [content.0, 14]
#         - contains: [content.0, age_section_id]
#         - contains: [content.0, gold]
#         - contains: [content.0, familiar_sprite]
#         - contains: [content.0, preview_work_id]
# - test:
#     name: user_ids为逗号表达式只包含一个存在用户-fields为逗号表达式只包含id
#     request:
#         url: /accounts/business?user_ids=${source_user_id()}&fields=id
#     validate:
#         - eq: [status_code, 200]
#         - eq: [content.0.id, ${source_user_id()}]
#         - length_equals: [content, 1]
#         - length_equals: [content.0, 1]
# - test:
#     name: user_ids为逗号表达式只包含一个存在用户-fields为逗号表达式只包含age_section_id
#     request:
#         url: /accounts/business?user_ids=${source_user_id()}&fields=age_section_id
#     validate:
#         - eq: [status_code, 200]
#         - length_equals: [content, 1]
#         - length_equals: [content.0, 1]
# - test:
#     name: user_ids为逗号表达式只包含一个存在用户-fields为逗号表达式只包含id和age_section_id
#     request:
#         url: /accounts/business?user_ids=${source_user_id()}&fields=id,age_section_id
#     validate:
#         - eq: [status_code, 200]
#         - eq: [content.0.id, ${source_user_id()}]
#         - length_equals: [content, 1]
#         - length_equals: [content.0, 2] 
# # - test:
# #     name: user_ids为逗号表达式只包含一个存在用户-fields为逗号表达式包含不支持的字段
# #     request:
# #         url: /accounts/business?user_ids=${source_user_id()}&fields=$unsupport_fields_element
# #     validate:
# #         - eq: [status_code, 400]
# # - test:
# #     name: user_ids为逗号表达式只包含一个存在用户-fields格式错误
# #     request:
# #         url: /accounts/business?user_ids=${source_user_id()}&fields=$wrong_type_fields
# #     validate:
# #         - eq: [status_code, 400]
# - test:
#     name: user_ids为逗号表达式包含2个存在用户-fields不传递
#     request:
#         url: /accounts/business?user_ids=${source_user_id()},$target_user_id
#     extract:
#         - user1_id: content.0.id
#         - user2_id: content.1.id
#     validate:
#         - eq: [status_code, 200]
#         - length_equals: [content, 2]
#         # 返回list结果的排序：user_id ASC
#         - less_than: [$user1_id, $user2_id] 
# - test:
#     name: user_ids为逗号表达式包含存在用户和不存在用户
#     request:
#         url: /accounts/business?user_ids=${source_user_id()},$unexist_user_id
#     validate:
#         - eq: [status_code, 200]
#         - eq: [content.0.id, ${source_user_id()}]
#         - length_equals: [content, 1]
# - test:
#     name: user_ids为逗号表达式只包含不存在用户
#     request:
#         url: /accounts/business?user_ids=$unexist_user_id
#     validate:
#         - eq: [status_code, 200]
#         - length_equals: [content, 0]
# # - test:
# #     name: user_ids格式错误
# #     request:
# #         url: /accounts/business?user_ids=$wrong_type_user_ids
# #     validate:
# #         - eq: [status_code, 400]