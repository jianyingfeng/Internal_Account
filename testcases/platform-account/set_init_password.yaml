- config:
    name: 设置初始密码
    base_url: ${platform_tiger_api_host()}
    variables:
        - correct_password: '123456'
        - unexist_user_id: 100
        - unregister_phone_number: ${test_phone_number()}

- test:
    name: 用户已设置密码-password符合规则
    api: api/platform-user-tiger/set_init_password.yaml
    variables:
        - user_id: ${source_user_id()}
        - password: $correct_password
    validate:
        - eq: [status_code, 422]
        - eq: [content.error_code, '10001003']

# 手机号注册用户，只在dev环境下验证
- test:
    name: 准备工作：手机号注册不设置密码
    skipUnless: ${is_dev_or_test()}
    setup_hooks:
        - ${clear_phone_number($unregister_phone_number)}
    api: api/platform-user-tiger/register_phone_number.yaml
    variables:
        - phone_number: $unregister_phone_number
    validate:
        - eq: [status_code, 200]
        - contains: [content, id]
        - length_equals: [content, 1]
    extract:
        - user_with_phone_number: content.id

- test:
    name: 手机号注册用户未设置密码-password符合规则
    skipUnless: ${is_dev_or_test()}
    api: api/platform-user-tiger/set_init_password.yaml
    variables:
        - user_id: $user_with_phone_number
        - password: $correct_password
    validate:
        - eq: [status_code, 204]

- test:
    name: 验证初始密码设置成功，用户使用手机号+密码可以登录
    skipUnless: ${is_dev_or_test()}
    api: api/account/account_login.yaml
    variables:
        - identity: $unregister_phone_number
        - password: $correct_password
    validate:
        - eq: [status_code, 200]
        - eq: [content.user_info.id, $user_with_phone_number]
    teardown_hooks:
        - ${clear_phone_number($unregister_phone_number)}

- test:
    name: 用户不存在-password符合规则
    api: api/platform-user-tiger/set_init_password.yaml
    variables:
        - user_id: $unexist_user_id
        - password: $correct_password
    validate:
        - eq: [status_code, 422]
        - eq: [content.error_code, '10001002']