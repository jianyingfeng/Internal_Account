# - config:
#     name: 收藏作品
#     request:
#         base_url: $tiger_api_host
#         method: POST
#     variables:
#         - unexist_work_id: 100
#         - wrong_type_work_id: aaa

# - test:
#     name: 未登录-已发布作品
#     request:
#         url: /api/work/collection/$source_user_ide_published_work_id
#     validate:
#         - eq: [status_code, 200]
#         - eq: [content.code, 2002]
#         - eq: [content.msg, 用户未登陆]
# - test:
#     name: 已登录-个人已发布作品(未收藏)
#     request:
#         url: /api/work/collection/$source_user_ide_published_work_id
#         headers:
#             Authorization: $source_user_login_token
#     validate:
#         - eq: [status_code, 200]
#         - eq: [content.code, 200]
#         - eq: [content.msg, 成功]
#         - length_equals: [content.data, 0]
# - test:
#     name: 已登录-个人已发布作品(已收藏) 
#     request:
#         url: /api/work/collection/$source_user_ide_published_work_id
#         headers:
#             Authorization: $source_user_login_token
#     validate:
#         - eq: [status_code, 200]
#         - eq: [content.code, 2001]
#         - eq: [content.msg, 输入数据格式错误]
#         - length_equals: [content.data, 0]
#     teardown_hooks:
#         # 取消收藏作品
#         - ${uncollection_work($source_user_ide_published_work_id)}
# - test:
#     name: 已登录-个人未发布作品(未收藏) 
#     request:
#         url: /api/work/collection/$source_user_ide_unpublish_work_id
#         headers:
#             Authorization: $source_user_login_token
#     validate:
#         - eq: [status_code, 200]
#         - eq: [content.code, 200]
#         - eq: [content.msg, 成功]
#         - length_equals: [content.data, 0]
# - test:
#     name: 已登录-个人未发布作品(已收藏) 
#     request:
#         url: /api/work/collection/$source_user_ide_unpublish_work_id
#         headers:
#             Authorization: $source_user_login_token
#     validate:
#         - eq: [status_code, 200]
#         - eq: [content.code, 2001]
#         - eq: [content.msg, 输入数据格式错误]
#         - length_equals: [content.data, 0]
#     teardown_hooks:
#         # 取消收藏作品
#         - ${uncollection_work($source_user_ide_unpublish_work_id)}
# - test:
#     name: 已登录-个人临时删除作品(未收藏) 
#     request:
#         url: /api/work/collection/$source_user_ide_deleted_temporarily_work_id
#         headers:
#             Authorization: $source_user_login_token
#     validate:
#         - eq: [status_code, 200]
#         - eq: [content.code, 200]
#         - eq: [content.msg, 成功]
#         - length_equals: [content.data, 0]
# - test:
#     name: 已登录-个人临时删除作品(已收藏) 
#     request:
#         url: /api/work/collection/$source_user_ide_deleted_temporarily_work_id
#         headers:
#             Authorization: $source_user_login_token
#     validate:
#         - eq: [status_code, 200]
#         - eq: [content.code, 2001]
#         - eq: [content.msg, 输入数据格式错误]
#         - length_equals: [content.data, 0]
#     teardown_hooks:
#         # 取消收藏作品
#         - ${uncollection_work($source_user_ide_deleted_temporarily_work_id)}
# - test:
#     name: 已登录-个人永久删除作品(未收藏) 
#     request:
#         url: /api/work/collection/$source_user_ide_deleted_permanently_work_id
#         headers:
#             Authorization: $source_user_login_token
#     validate:
#         - eq: [status_code, 200]
#         - eq: [content.code, 200]
#         - eq: [content.msg, 成功]
#         - length_equals: [content.data, 0]
# - test:
#     name: 已登录-个人临时删除作品(已收藏) 
#     request:
#         url: /api/work/collection/$source_user_ide_deleted_permanently_work_id
#         headers:
#             Authorization: $source_user_login_token
#     validate:
#         - eq: [status_code, 200]
#         - eq: [content.code, 2001]
#         - eq: [content.msg, 输入数据格式错误]
#         - length_equals: [content.data, 0]
#     teardown_hooks:
#         # 取消收藏作品
#         - ${uncollection_work($source_user_ide_deleted_permanently_work_id)}
# - test:
#     name: 已登录-作品id不存在 
#     request:
#         url: /api/work/collection/$unexist_work_id
#         headers:
#             Authorization: $source_user_login_token
#     validate:
#         - eq: [status_code, 200]
#         - eq: [content.code, 500]
#         - length_equals: [content.data, 0]
# - test:
#     name: 已登录-格式错误的作品id 
#     request:
#         url: /api/work/collection/$wrong_type_work_id
#         headers:
#             Authorization: $source_user_login_token
#     validate:
#         - eq: [status_code, 400]
#         - eq: [content.error_code, A_5]