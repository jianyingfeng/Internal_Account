# - config:
#     name: 发布作品
#     request:
#         base_url: $tiger_api_host
#         method: PUT
#         headers:
#             Content-Type: $content_type
#     variables:
#         preview_work_url: https://static.codemao.cn/lesson/assets/images/work_default_preview_1.png
#         # 游戏标签
#         work_label_id: 23
#         unexist_work_label_id: 1000
#         unexist_work_allow_fork: 2
#         unpublish_work: ${work_info($source_user_ide_unpublish_work_id)}

# - test:
#     name: 未登录-已发布作品
#     request:
#         url: /tiger/work/$source_user_ide_published_work_id/publish
#     validate:
#         - eq: [status_code, 403]
#         - eq: [content.error_code, E_0]
# - test:
#     name: 已登录-个人已发布作品-body为空
#     request:
#         url: /tiger/work/$source_user_ide_published_work_id/publish
#         headers:
#             Authorization: $source_user_login_token
#     validate:
#         - eq: [status_code, 204]
# - test:
#     name: 已登录-个人已发布作品-body只传递preview
#     request:
#         url: /tiger/work/$source_user_ide_published_work_id/publish
#         headers:
#             Authorization: $source_user_login_token
#         json:
#             preview: $preview_work_url
#     validate:
#         - eq: [status_code, 204]
# - test:
#     name: 已登录-个人已发布作品-body只传递label
#     request:
#         url: /tiger/work/$source_user_ide_published_work_id/publish
#         headers:
#             Authorization: $source_user_login_token
#         json:
#             labels: [$work_label_id]
#     validate:
#         - eq: [status_code, 204]
# - test:
#     name: 已登录-个人已发布作品-body传递不存在的label_id
#     request:
#         url: /tiger/work/$source_user_ide_published_work_id/publish
#         headers:
#             Authorization: $source_user_login_token
#         json:
#             labels: [$unexist_work_label_id]
#     validate:
#         - eq: [status_code, 403]
#         - eq: [content.error_code, W_4]
# - test:
#     name: 已登录-个人已发布作品-body只传递不存在的allow_fork
#     request:
#         url: /tiger/work/$source_user_ide_published_work_id/publish
#         headers:
#             Authorization: $source_user_login_token
#         json:
#             labels: [$unexist_work_allow_fork]
#     validate:
#         - eq: [status_code, 400]
#         - eq: [content.error_code, A_5]
# - test:
#     name: 已登录-个人未发布作品-body为空
#     #skipIf: ${eval_content($unpublish_work["publish_time"] > 0)}
#     request:
#         url: /tiger/work/$unpublish_work["id"]/publish
#         headers:
#             Authorization: $source_user_login_token
#     validate:
#         - eq: [status_code, 204]